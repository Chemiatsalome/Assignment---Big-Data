[
    {
        "id": "1f052dbab45d5c85",
        "type": "tab",
        "label": "MQTT with Kafka",
        "disabled": false,
        "info": ""
    },
    {
        "id": "77ca1f6be788039c",
        "type": "aedes broker",
        "z": "1f052dbab45d5c85",
        "name": "",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": null,
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "persistence_bind": "memory",
        "dburl": "",
        "usetls": false,
        "x": 370,
        "y": 80,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "4893c8f6199d55aa",
        "type": "mqtt out",
        "z": "1f052dbab45d5c85",
        "name": "publisher",
        "topic": "iot/temp",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b8de56e1ebf9fdbd",
        "x": 820,
        "y": 160,
        "wires": []
    },
    {
        "id": "21afe9090e0945ca",
        "type": "mqtt in",
        "z": "1f052dbab45d5c85",
        "name": "subscriber",
        "topic": "iot/temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "b8de56e1ebf9fdbd",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 80,
        "y": 480,
        "wires": [
            [
                "1235115a326ce259"
            ]
        ]
    },
    {
        "id": "113ba72151243c73",
        "type": "inject",
        "z": "1f052dbab45d5c85",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "4e86223e3a21aab9"
            ]
        ]
    },
    {
        "id": "48747945b14fde8d",
        "type": "debug",
        "z": "1f052dbab45d5c85",
        "name": "MQTT Subscriber OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 480,
        "wires": []
    },
    {
        "id": "e0554fe317e13fc9",
        "type": "kafka",
        "z": "1f052dbab45d5c85",
        "brokerUrl": "kafka:9092",
        "topic": "iot-temp",
        "partition": "0",
        "debug": "",
        "x": 810,
        "y": 240,
        "wires": []
    },
    {
        "id": "c6646bbef9267ec2",
        "type": "function",
        "z": "1f052dbab45d5c85",
        "name": "function: toJSON",
        "func": "const data = {\n    \"source\": \"node-red\",\n    \"timestamp\": msg.payload[0],\n    \"value\": msg.payload[1],\n    \"status\": msg.payload[2]\n};\nmsg.payload = JSON.stringify(data);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 300,
        "wires": [
            [
                "e0554fe317e13fc9",
                "78503188264c251c"
            ]
        ]
    },
    {
        "id": "1235115a326ce259",
        "type": "function",
        "z": "1f052dbab45d5c85",
        "name": "function: output",
        "func": "msg.payload = \"MQTT subscriber received: \" + msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 480,
        "wires": [
            [
                "48747945b14fde8d"
            ]
        ]
    },
    {
        "id": "78503188264c251c",
        "type": "debug",
        "z": "1f052dbab45d5c85",
        "name": "Kafka Message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 400,
        "wires": []
    },
    {
        "id": "4e86223e3a21aab9",
        "type": "function",
        "z": "1f052dbab45d5c85",
        "name": "function: Random",
        "func": "var tstamp = msg.payload;\n\nvar val = function getRandomInt(min = 1, max = 1000) {\n\n    min = Math.ceil(min);\n    max = Math.floor(max);\n\n    return Math.floor(Math.random() * (max - min)) + min;\n\n}();\n\nvar status = 'low';\n\nif (val <= 200)\nstatus = 'low';\nelse if (val > 200 && val <= 750)\nstatus = 'normal'\nelse\nstatus = 'high'\n\nmsg.payload = [tstamp, val, status]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 160,
        "wires": [
            [
                "c6646bbef9267ec2",
                "4893c8f6199d55aa"
            ]
        ]
    },
    {
        "id": "b8de56e1ebf9fdbd",
        "type": "mqtt-broker",
        "name": "MQTT Broker",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]