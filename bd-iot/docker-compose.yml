version: '3'
services:
  
    node-red:
      image: nodered/node-red
      volumes:
        - nodered_data:/data
      ports:
        - "1881:1880"
      container_name: nodered

    zookeeper:
      image: 'bitnami/zookeeper:latest'
      ports:
        - '2181:2181'
      environment:
        - ALLOW_ANONYMOUS_LOGIN=yes
      container_name: zookeeper

    kafka:
      image: 'bitnami/kafka:latest'
      ports:
        - '9092:9092'
      environment:
        - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
        - ALLOW_PLAINTEXT_LISTENER=yes
        - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
        - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
        - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
        - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
        - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
        # - KAFKA_BROKER_ID=1
      depends_on:
        - zookeeper
      container_name: kafka

    # create kafka IoT topic
    kafka-init:
      image: 'bitnami/kafka:latest'
      command: [ "/bin/bash", "-c", "chmod +x /kafka_topic.sh && sh /kafka_topic.sh"]
      environment:
        - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
        - IOT_TOPIC_NAME=iot-temp
      depends_on:
        - kafka
      volumes:
        - type: bind
          source: ./configs/kafka_topic.sh
          target: /kafka_topic.sh
      init: true
      container_name: kafka-init

volumes:
    nodered_data: {}
