################################################################################
### STAGE 1: Build Zeppelin from Source ###
FROM openjdk:8 as builder


ARG GIT_BRANCH="master"
ARG GIT_TAG = "v0.10.1"

ENV ZEPPELIN_SRC="/workspace/zeppelin"

RUN curl -fsSL https://deb.nodesource.com/setup_lts.x | bash - \
	&& apt-get update && apt-get install -y  --no-install-recommends\
		git \
		nodejs \
		python3 python3-setuptools python3-pip \
    	r-base-dev \
		r-cran-evaluate \
	&& rm -rf /var/lib/apt/lists/* \
	&& pip3 install --upgrade pip \
  && mkdir -p $ZEPPELIN_SRC \
  && git clone --depth 1 --branch $GIT_TAG https://github.com/apache/zeppelin.git $ZEPPELIN_SRC

WORKDIR $ZEPPELIN_SRC
ENV MAVEN_OPTS="-Xms1024M -Xmx2048M -XX:MaxMetaspaceSize=1024m -XX:-UseGCOverheadLimit -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"

# Allow npm and bower to run with root privileges
RUN echo "unsafe-perm=true" > ~/.npmrc && \
    echo '{ "allow_root": true }' > ~/.bowerrc && \
    #./mvnw -B package -DskipTests -Pbuild-distr -Pspark-3.2 -Pinclude-hadoop -Phadoop3 -Pspark-scala-2.12 -Pweb-angular -Pweb-dist && \
    # Example with doesn't compile all interpreters
    ./mvnw -B package -DskipTests -Pbuild-distr -Pspark-3.2 -Pinclude-hadoop -Phadoop3 -Pspark-scala-2.12 -Pweb-angular -Pweb-dist -pl '!groovy,!submarine,!livy,!hbase,!file,!flink' && \
    mv /workspace/zeppelin/zeppelin-distribution/target/zeppelin-*/zeppelin-* /opt/zeppelin/ && \
    # Removing stuff saves time, because docker creates a temporary layer
    rm -rf ~/.m2 && \
    rm -rf /workspace/zeppelin/*
