{"paragraphs":[{"text":"%spark\n\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.SparkSession\n\nval spark = SparkSession\n  .builder\n  .appName(\"KafkaStream\")\n  .getOrCreate()\n  \nimport spark.implicits._","user":"anonymous","dateUpdated":"2023-03-27T13:20:05+0000","progress":0,"config":{"colWidth":12,"fontSize":9,"results":{},"enabled":true,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.functions._\nimport org.apache.spark.sql.SparkSession\n\u001b[1m\u001b[34mspark\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.SparkSession\u001b[0m = org.apache.spark.sql.SparkSession@3c1b39f5\nimport spark.implicits._\n"}]},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1679916711203_342870265","id":"paragraph_1679554433007_783326524","dateCreated":"2023-03-27T11:31:51+0000","dateStarted":"2023-03-27T13:20:05+0000","dateFinished":"2023-03-27T13:20:32+0000","status":"FINISHED","focus":false},{"text":"%spark\n\n// Subscribe to 1 topic\nval df = spark.readStream.format(\"kafka\")\n  .option(\"kafka.bootstrap.servers\", \"kafka:9092\") // OR localhost:9092\n  .option(\"subscribe\", \"iot-temp\")\n  .option(\"startingOffsets\", \"earliest\") // From starting\n  .load();\n\n","user":"anonymous","dateUpdated":"2023-03-27T13:20:48+0000","progress":0,"config":{"colWidth":12,"fontSize":9,"results":{},"enabled":true,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\u001b[1m\u001b[34mdf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [key: binary, value: binary ... 5 more fields]\n"}]},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1679916711211_1347097143","id":"paragraph_1679568846170_1023495888","dateCreated":"2023-03-27T11:31:51+0000","dateStarted":"2023-03-27T13:20:48+0000","dateFinished":"2023-03-27T13:20:50+0000","status":"FINISHED","focus":false},{"text":"%spark\nimport org.apache.spark.sql.types.{IntegerType,StringType,StructType}\n\n\nval string_df = df.selectExpr(\"CAST(value AS STRING)\")\n\nval schema = new StructType()\n      .add(\"Source\",StringType)\n      .add(\"Value\",IntegerType)\n\n val iot_df = string_df.select(from_json(col(\"value\"), schema).as(\"data\"))\n   .select(\"data.*\")","user":"anonymous","dateUpdated":"2023-03-27T13:20:59+0000","progress":0,"config":{"colWidth":12,"fontSize":9,"results":{},"enabled":true,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.types.{IntegerType, StringType, StructType}\n\u001b[1m\u001b[34mstring_df\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [value: string]\n\u001b[1m\u001b[34mschema\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.types.StructType\u001b[0m = StructType(StructField(Source,StringType,true), StructField(Value,IntegerType,true))\n\u001b[1m\u001b[34miot_df\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [Source: string, Value: int]\n"}]},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1679918011454_913834609","id":"paragraph_1679918011454_913834609","dateCreated":"2023-03-27T11:53:31+0000","dateStarted":"2023-03-27T13:20:59+0000","dateFinished":"2023-03-27T13:21:01+0000","status":"FINISHED","focus":false},{"text":"%spark\n\nval query = iot_df.writeStream\n  .format(\"memory\")\n  .outputMode(\"append\")\n  .queryName(\"tbl_iot\")\n  .start()\n\n//query.awaitTermination()\n","user":"anonymous","dateUpdated":"2023-03-27T12:55:13+0000","progress":0,"config":{"colWidth":12,"fontSize":9,"results":{},"enabled":true,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\u001b[1m\u001b[34mquery\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.streaming.StreamingQuery\u001b[0m = org.apache.spark.sql.execution.streaming.StreamingQueryWrapper@3e27a47a\n"}]},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1679918254969_119611455","id":"paragraph_1679918254969_119611455","dateCreated":"2023-03-27T11:57:34+0000","dateStarted":"2023-03-27T12:16:45+0000","dateFinished":"2023-03-27T12:16:46+0000","status":"FINISHED"},{"text":"%spark.pyspark\n\nspark.table(\"tbl_iot\").show()","user":"anonymous","dateUpdated":"2023-03-27T12:17:13+0000","progress":100,"config":{"colWidth":12,"fontSize":9,"results":{},"enabled":true,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------+-----+\n|Source|Value|\n+------+-----+\n+------+-----+\n\n"}]},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://ca14e6e69d0d:4040/jobs/job?id=5"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1679919199101_1109170532","id":"paragraph_1679919199101_1109170532","dateCreated":"2023-03-27T12:13:19+0000","dateStarted":"2023-03-27T12:16:59+0000","dateFinished":"2023-03-27T12:16:59+0000","status":"FINISHED"},{"text":"%spark\n\nsc.version\n","user":"anonymous","dateUpdated":"2023-03-27T11:54:12+0000","progress":0,"config":{"colWidth":12,"fontSize":9,"results":{},"enabled":true,"editorSetting":{}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\u001b[1m\u001b[34mres1\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = 2.4.5\n"}]},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1679916711213_1801891942","id":"paragraph_1679564931775_417103493","dateCreated":"2023-03-27T11:31:51+0000","dateStarted":"2023-03-27T11:54:12+0000","dateFinished":"2023-03-27T11:54:29+0000","status":"FINISHED"},{"text":"%spark\n","user":"anonymous","dateUpdated":"2023-03-27T11:33:27+0000","progress":0,"config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{}},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1679916807219_860487490","id":"paragraph_1679916807219_860487490","dateCreated":"2023-03-27T11:33:27+0000","status":"READY"}],"name":"analytics_from_kafka","id":"2HWY7BE5S","defaultInterpreterGroup":"spark","version":"0.9.0","noteParams":{},"noteForms":{},"angularObjects":{},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{},"path":"/analytics_from_kafka"}